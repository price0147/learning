
package com.wangx.webservice.webserviceCXFJaxws.serialization;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "WebSvc", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://127.0.0.1:9099/CRRC_API/WebSvc?wsdl")
public class WebSvc
        extends Service {

    private final static URL WEBSVC_WSDL_LOCATION;
    private final static WebServiceException WEBSVC_EXCEPTION;
    private final static QName WEBSVC_QNAME = new QName("http://tempuri.org/", "WebSvc");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:9099/CRRC_API/WebSvc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WEBSVC_WSDL_LOCATION = url;
        WEBSVC_EXCEPTION = e;
    }

    public WebSvc() {
        super(__getWsdlLocation(), WEBSVC_QNAME);
    }

    public WebSvc(WebServiceFeature... features) {
        super(__getWsdlLocation(), WEBSVC_QNAME, features);
    }

    public WebSvc(URL wsdlLocation) {
        super(wsdlLocation, WEBSVC_QNAME);
    }

    public WebSvc(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WEBSVC_QNAME, features);
    }

    public WebSvc(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebSvc(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns IWebSvc
     */
    @WebEndpoint(name = "BasicHttpBinding_IWebSvc")
    public IWebSvc getBasicHttpBindingIWebSvc() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWebSvc"), IWebSvc.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IWebSvc
     */
    @WebEndpoint(name = "BasicHttpBinding_IWebSvc")
    public IWebSvc getBasicHttpBindingIWebSvc(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWebSvc"), IWebSvc.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEBSVC_EXCEPTION != null) {
            throw WEBSVC_EXCEPTION;
        }
        return WEBSVC_WSDL_LOCATION;
    }

}
